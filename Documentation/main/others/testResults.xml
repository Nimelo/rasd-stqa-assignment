<?xml version="1.0" encoding="UTF-8"?><testrun duration="1053" footerText="Generated by IntelliJ IDEA on 1/5/17 12:43 AM" name="All in Core (1)">
    <count name="total" value="61"/>
    <count name="passed" value="61"/>
    <config nameIsGenerated="true" configId="JUnit" name="All in Core (1)">
        <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea"/>
        <module name="Core"/>
        <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false"/>
        <option name="ALTERNATIVE_JRE_PATH"/>
        <option name="PACKAGE_NAME" value=""/>
        <option name="MAIN_CLASS_NAME"/>
        <option name="METHOD_NAME"/>
        <option name="TEST_OBJECT" value="package"/>
        <option name="VM_PARAMETERS" value="-ea"/>
        <option name="PARAMETERS"/>
        <option name="WORKING_DIRECTORY" value="$MODULE_DIR$"/>
        <option name="ENV_VARIABLES"/>
        <option name="PASS_PARENT_ENVS" value="true"/>
        <option name="TEST_SEARCH_SCOPE">
            <value defaultName="singleModule"/>
        </option>
        <envs/>
        <patterns/>
    </config>
    <root name="&lt;default package&gt;" location="java:suite://&lt;default package&gt;">
       
        <output type="stdout">---- IntelliJ IDEA coverage runner ---- 
sampling ...
include patterns:
exclude patterns:
</output>
        <output type="stderr">Jan 05, 2017 12:40:52 AM org.junit.platform.launcher.core.ServiceLoaderTestEngineRegistry loadTestEngines
INFO: Discovered TestEngines with IDs: [junit-jupiter]
</output>
        <output type="stdout">Process finished with exit code 0
</output>
    </root>
    <suite duration="63" locationUrl="java:suite://assignment.configurations.simulation.objects.ShiftTimeTest" name="ShiftTimeTest" status="passed">
        <test duration="63" locationUrl="java:test://assignment.configurations.simulation.objects.ShiftTimeTest.toWeekTick" name="toWeekTick()" status="passed"/>
    </suite>
    <suite duration="321" locationUrl="java:suite://assignment.io.readers.configurations.simulation.ConfigurationReaderTest" name="ConfigurationReaderTest" status="passed">
        <test duration="314" locationUrl="java:test://assignment.io.readers.configurations.simulation.ConfigurationReaderTest.readFromJson" name="readFromJson()" status="passed"/>
        <test duration="7" locationUrl="java:test://assignment.io.readers.configurations.simulation.ConfigurationReaderTest.readFromPath" name="readFromPath()" status="passed"/>
    </suite>
    <suite duration="8" locationUrl="java:suite://assignment.simulator.calculator.PriceCalculatorTest" name="PriceCalculatorTest" status="passed">
        <test duration="4" locationUrl="java:test://assignment.simulator.calculator.PriceCalculatorTest.calculatePriceResource" name="calculatePriceResource()" status="passed"/>
        <test duration="4" locationUrl="java:test://assignment.simulator.calculator.PriceCalculatorTest.calculatePrice" name="calculatePrice()" status="passed"/>
    </suite>
    <suite duration="4" locationUrl="java:suite://assignment.simulator.generation.distribution.ExponentialProbabilityDistributionTest" name="ExponentialProbabilityDistributionTest" status="passed">
        <test duration="2" locationUrl="java:test://assignment.simulator.generation.distribution.ExponentialProbabilityDistributionTest.get" name="get()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.simulator.generation.distribution.ExponentialProbabilityDistributionTest.get1" name="get1()" status="passed"/>
    </suite>
    <suite duration="34" locationUrl="java:suite://assignment.simulator.generation.JobSpawnerTest" name="JobSpawnerTest" status="passed">
        <test duration="20" locationUrl="java:test://assignment.simulator.generation.JobSpawnerTest.generateRequestedResource" name="generateRequestedResource()" status="passed"/>
        <test duration="14" locationUrl="java:test://assignment.simulator.generation.JobSpawnerTest.spawnJobForUser" name="spawnJobForUser()" status="passed"/>
    </suite>
    <suite duration="11" locationUrl="java:suite://assignment.simulator.generation.QueueSpawnerTest" name="QueueSpawnerTest" status="passed">
        <test duration="5" locationUrl="java:test://assignment.simulator.generation.QueueSpawnerTest.findCoresPerNode" name="findCoresPerNode()" status="passed"/>
        <test duration="3" locationUrl="java:test://assignment.simulator.generation.QueueSpawnerTest.spawnQueues" name="spawnQueues()" status="passed"/>
        <test duration="3" locationUrl="java:test://assignment.simulator.generation.QueueSpawnerTest.createHardwareResourceManagerBasedOn" name="createHardwareResourceManagerBasedOn()" status="passed"/>
    </suite>
    <suite duration="4" locationUrl="java:suite://assignment.simulator.generation.randomization.RNGMechanismTest" name="RNGMechanismTest" status="passed">
        <test duration="0" locationUrl="java:test://assignment.simulator.generation.randomization.RNGMechanismTest.generateFromRange1" name="generateFromRange1()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.simulator.generation.randomization.RNGMechanismTest.pickItemByItsProbability" name="pickItemByItsProbability()" status="passed"/>
        <test duration="4" locationUrl="java:test://assignment.simulator.generation.randomization.RNGMechanismTest.generateFromRange" name="generateFromRange()" status="passed"/>
    </suite>
    <suite duration="6" locationUrl="java:suite://assignment.simulator.generation.UserSpawnerTest" name="UserSpawnerTest" status="passed">
        <test duration="3" locationUrl="java:test://assignment.simulator.generation.UserSpawnerTest.spawnUsersForGroup" name="spawnUsersForGroup()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.simulator.generation.UserSpawnerTest.spawn" name="spawn()" status="passed"/>
        <test duration="3" locationUrl="java:test://assignment.simulator.generation.UserSpawnerTest.spawnUser" name="spawnUser()" status="passed"/>
    </suite>
    <suite duration="12" locationUrl="java:suite://assignment.simulator.matchers.JobToQueueMatcherTest" name="JobToQueueMatcherTest" status="passed">
        <test duration="11" locationUrl="java:test://assignment.simulator.matchers.JobToQueueMatcherTest.match" name="match()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.simulator.matchers.JobToQueueMatcherTest.checkResourcesListConstraints" name="checkResourcesListConstraints()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.simulator.matchers.JobToQueueMatcherTest.checkSingleResourceConstraint" name="checkSingleResourceConstraint()" status="passed"/>
    </suite>
    <suite duration="9" locationUrl="java:suite://assignment.simulator.objects.queue.HardwareResourcesManagerTest" name="HardwareResourcesManagerTest" status="passed">
        <test duration="1" locationUrl="java:test://assignment.simulator.objects.queue.HardwareResourcesManagerTest.tryAllocateResources" name="tryAllocateResources()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.simulator.objects.queue.HardwareResourcesManagerTest.deallocateResource" name="deallocateResource()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.simulator.objects.queue.HardwareResourcesManagerTest.checkIfCanAllocate" name="checkIfCanAllocate()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.simulator.objects.queue.HardwareResourcesManagerTest.deallocateResources" name="deallocateResources()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.simulator.objects.queue.HardwareResourcesManagerTest.allocateResourceList" name="allocateResourceList()" status="passed"/>
        <test duration="3" locationUrl="java:test://assignment.simulator.objects.queue.HardwareResourcesManagerTest.getNodeResourceEntryMap" name="getNodeResourceEntryMap()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.simulator.objects.queue.HardwareResourcesManagerTest.allocateResource" name="allocateResource()" status="passed"/>
    </suite>
    <suite duration="5" locationUrl="java:suite://assignment.simulator.objects.queue.QueueTest" name="QueueTest" status="passed">
        <test duration="1" locationUrl="java:test://assignment.simulator.objects.queue.QueueTest.swipeExecutedJobs" name="swipeExecutedJobs()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.simulator.objects.queue.QueueTest.iteration" name="iteration()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.simulator.objects.queue.QueueTest.isCutOffTime" name="isCutOffTime()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.simulator.objects.queue.QueueTest.isInWorkingTime" name="isInWorkingTime()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.simulator.objects.queue.QueueTest.switchAreas" name="switchAreas()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.simulator.objects.queue.QueueTest.submitJob" name="submitJob()" status="passed"/>
    </suite>
    <suite duration="498" locationUrl="java:suite://assignment.simulator.SimulatorTest" name="SimulatorTest" status="passed">
        <test duration="498" locationUrl="java:test://assignment.simulator.SimulatorTest.run" name="run()" status="passed"/>
    </suite>
    <suite duration="37" locationUrl="java:suite://assignment.validators.BasicValidatorTest" name="BasicValidatorTest" status="passed">
        <test duration="2" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldBeOneOf" name="shouldBeOneOf()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldBeUnique" name="shouldBeUnique()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldBeEqual1" name="shouldBeEqual1()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldBeTrue" name="shouldBeTrue()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldNotBeNull" name="shouldNotBeNull()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldBeEqual" name="shouldBeEqual()" status="passed"/>
        <test duration="14" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldBeInRange" name="shouldBeInRange()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldContainElements" name="shouldContainElements()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldBeGreaterThan" name="shouldBeGreaterThan()" status="passed"/>
        <test duration="12" locationUrl="java:test://assignment.validators.BasicValidatorTest.shouldBeInRangeBoundryless" name="shouldBeInRangeBoundryless()" status="passed"/>
    </suite>
    <suite duration="40" locationUrl="java:suite://assignment.validators.configurations.simulation.ConfigurationValidatorTest" name="ConfigurationValidatorTest" status="passed">
        <test duration="21" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validate" name="validate()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateRNGSeed" name="validateRNGSeed()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateUserGroupsConfiguration" name="validateUserGroupsConfiguration()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateSystemResources" name="validateSystemResources()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateJobDistribution" name="validateJobDistribution()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateReservedResources" name="validateReservedResources()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateSingleNode" name="validateSingleNode()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateReservationInQueues" name="validateReservationInQueues()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateJobTypesConfiguration" name="validateJobTypesConfiguration()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateNodesInQueues" name="validateNodesInQueues()" status="passed"/>
        <test duration="1" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateMachineOperationalCost" name="validateMachineOperationalCost()" status="passed"/>
        <test duration="5" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateNodesInJobTypes" name="validateNodesInJobTypes()" status="passed"/>
        <test duration="2" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateQueuesConfiguration" name="validateQueuesConfiguration()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.validators.configurations.simulation.ConfigurationValidatorTest.validateSimulationTime" name="validateSimulationTime()" status="passed"/>
    </suite>
    <suite duration="1" locationUrl="java:suite://assignment.validators.ValidationExceptionTest" name="ValidationExceptionTest" status="passed">
        <test duration="1" locationUrl="java:test://assignment.validators.ValidationExceptionTest.getContext" name="getContext()" status="passed"/>
        <test duration="0" locationUrl="java:test://assignment.validators.ValidationExceptionTest.toStringTest" name="toStringTest()" status="passed"/>
    </suite>
</testrun>
